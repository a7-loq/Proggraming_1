Assignment _CS111

Assignment Objectives:
• To practise reading from and writing to the console .
• To practise using the Math class and the String class.
• To practise using loops (repetition)


Task 1 – ThreeWords.java

Write a Java program called ThreeWords that prompts (asks) the user
to enter three words, separated by a space, on the same line and read
in using the .nextLine( ) method of the Scanner class. You may NOT
use the .next( ) method of the Scanner class in this Task. Using the .next( ) method of the Scanner class will result in this Task being awarded 0, 
regardless of correct execution. 
(You may assume that the user always enters 3 words, each word separated by a single space.) 
Once the user has entered the three words, the program displays to the screen the longest word, that is, the word with the most characters.
In the event of one or more of the words having the same number of characters, the program may decide which word it displays to the screen. 
Based on the restrictions above, the skeleton of your program will look like this: 
Some sample runs of the program are included below (user input is in bold): 
> java ThreeWords
Enter 3 words >> hello dragon at The longest word is dragon 
> java ThreeWords
Enter 3 words >> finished this Task1 The longest word is finished 
> java ThreeWords
Enter 3 words >> aa a abc The longest word is abc 




Task 2 – Flying.java

The two forces acting on an aircraft in flight are lift (acting upwards) and weight (acting
downwards). If the lift of the aircraft equals the weight of the aircraft, then the aircraft
neither goes up nor down, it is in level flight. If the lift is greater than the weight, then the
aircraft climbs (gains altitude). If the weight is greater than the lift, then the aircraft
descends (loses altitude)
Write a Java program named Flying that calculates whether an aircraft is flying level,
climbing or descending.
The basic equation to calculate this lift is known as the Flight Equation.
The Flight Equation is:
L = 1 / 2 * ρ * v2 * s *cl
where
L = lift (in Newtons), this must equal the weight of the aircraft for the aircraft to fly.
To convert kilograms to Newtons multiply kilograms by 9.8
ρ = density of the air, in kg / m3
      This value is a maximum of 1.2 at sea level and decreases as altitude (height)
      increases
v = current speed, in metres / second of the aircraft.
s = surface area of the wings, in m2
cl = lift co-efficient, a constant value (with no units) that describes how effective the
aircraft wing is at generating lift.
Your program will prompt (ask) the user to enter all the details for an aircraft, in the order as shown in the examples below,
then, using the Flight Equation above, calculate a value for the lift figure. The lift figure must be converted to kilograms, 
or the weight figure converted to Newtons, either way, so long as they are in the same unit. The weight and the lift are compared. 
If the weight is the same as the lift ± 250, then the aircraft is flying straight and level. If the weight is greater than lift + 250, 
then the aircraft is descending (losing altitude) and if the weight is less than lift - 250, then the aircraft is climbing (gaining altitude) 

Some sample runs of the program are included below (user input is in bold):


Example 1

> java Flying
Enter air density (p) >> 1.2
Enter velocity (m/s) >> 79.03
Enter wing surface area (m^2) >> 37.16 
Enter lift co-efficient >> 1.276
Enter aircraft name >> F/A 18 Hornet
Enter aircraft weight >> 18136
The F/A 18 Hornet aircraft is flying level 


Example 2

> java Flying
Enter air density (p) >> 1.2
Enter velocity (m/s) >> 65.26
Enter wing surface area (m^2) >> 37.16 
Enter lift co-efficient >> 1.276
Enter aircraft name >> F/A 18 Hornet Enter aircraft weight >> 18136
The F/A 18 Hornet aircraft is descending 


Example 3

> java Flying
Enter air density (p) >> 1.2
Enter velocity (m/s) >> 80.04
Enter wing surface area (m^2) >> 37.16 
Enter lift co-efficient >> 1.276
Enter aircraft name >> F/A 18 Hornet 
Enter aircraft weight >> 18136
The F/A 18 Hornet aircraft is climbing 
Note: The user input must be in the order shown above and the aircraft name must be able to accept names of more than one word. 
(Marks will be deducted otherwise). 




Task 3 – Box.java

Write a Java program in a file called Box.java that outputs a box of stars (*) on the
screen. Prompt the user for how big (row x column) the box should be. 
For example:
Please enter the  size of the box (row  column): 3 4
****
****
****

-------------------------------------------------------------------------------------------------------------------------------------
Task 1 – ThreeWords.java :

import java.util.Scanner;

public class ThreeWords {
	public static void main(String[] args) {
        Scanner input = new Scanner(System.in) ; 
        System.out.print("Enter 3 words >> "); 
        String words = input.nextLine();
        String strArray[] = words.split(" "); 
        
        counting(strArray) ;
        
    }
    public static void counting(String [] word){
        if(word.length>3)
            System.out.print("please enter only 3 words");
        String max = word[0] ; 
        int i ;
         for( i=1 ; i<word.length;i++){
            if (word[i].length() > max.length()) 
                 max = word[i];
        }
        System.out.print("the longest word is: "+max);
    }

}







Task 2 – Flying.java :

import java.util.Scanner;
public class Flying {
	
	public static void main(String[] args) {
	      double p,v,wsa,lc;
	       double  weight,l;
	      String name;
	         Scanner sc= new Scanner(System.in);
	      
	         System.out.print("\nEnter air density (p) >> ");
	         p= sc.nextDouble();
	         System.out.print("Enter velocity (m/s) >> ");
	         v= sc.nextDouble();
	         System.out.print("Enter wing surface area (m^2) >> ");
	         wsa= sc.nextDouble();
	         System.out.print("Enter lift co-efficient >>  ");
	         lc= sc.nextDouble();
	         sc.nextLine();
	         System.out.print("Enter aircraft name >> ");
	         name= sc.nextLine();
	         System.out.print("Enter aircraft weight >>");
	         weight= sc.nextDouble();

	         l = ((p * (v*v) * wsa *lc)/2)/9.80;

	         if((Math.abs(weight-l))<250)
	         {
	            System.out.print("The "+name+" is flying level");
	         }
	         else if((weight-l)>250)
	         {
	            System.out.print("The "+name+" is descending");
	         }
	         else if((weight-l)<250)
	         {
	            System.out.print("The "+name+" is climbing");
	         }
	       }

}






Task 3 – Box.java :

import java.util.Scanner;
public class Box {

	    public static void main(String[] args) {
	       Scanner sc= new Scanner(System.in);

	 System.out.print("Please enter the size of the box (row column) : ");
	 int row=sc.nextInt();
	 int column=sc.nextInt();
	 
	 for (int i= 0 ; i<row ; i++)
	 {
	 for ( int j=0 ; j<column;j++)
	 {
	 System.out.print("*");
	 }
	 System.out.println("\n\n");
	 }
	    }

}

